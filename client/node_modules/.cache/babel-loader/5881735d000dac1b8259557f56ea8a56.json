{"ast":null,"code":"var _jsxFileName = \"/Users/annayoungyeun/Projects/bucket-flicks-react-app/client/src/components/movies/MoviesFilter.js\";\nimport React, { useContext, useRef, useEffect, useState } from 'react'; //useRef hook is a way to reference a dom object - alternative for forms.  use for simple forms\n\nimport MovieContext from '../../context/movie/movieContext';\n\nconst MovieFilter = () => {\n  const movieContext = useContext(MovieContext);\n  const {\n    filterMovies,\n    clearFilter,\n    filtered,\n    loading\n  } = movieContext;\n  const text = useRef('');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== '' || text.current.value !== undefined) {\n      setSearchTerm(text.current.value);\n    }\n  };\n\n  const onSubmit = e => {\n    if (searchTerm !== '' || searchTerm !== undefined) {\n      filterMovies(searchTerm);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    disabled: !loading,\n    ref: text,\n    type: \"text\",\n    placeholder: \"Filter movies by Title\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    disabled: !loading,\n    type: \"submit\",\n    value: 'Search',\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MovieFilter;","map":{"version":3,"sources":["/Users/annayoungyeun/Projects/bucket-flicks-react-app/client/src/components/movies/MoviesFilter.js"],"names":["React","useContext","useRef","useEffect","useState","MovieContext","MovieFilter","movieContext","filterMovies","clearFilter","filtered","loading","text","searchTerm","setSearchTerm","current","value","onChange","e","undefined","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D,C,CACA;;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,YAAY,GAAGN,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA;AAAvC,MAAmDJ,YAAzD;AACA,QAAMK,IAAI,GAAGV,MAAM,CAAC,EAAD,CAAnB;AAEA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,KAAK,IAAjB,EAAuB;AACrBE,MAAAA,IAAI,CAACG,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIN,IAAI,CAACG,OAAL,CAAaC,KAAb,KAAuB,EAAvB,IAA6BJ,IAAI,CAACG,OAAL,CAAaC,KAAb,KAAuBG,SAAxD,EAAmE;AACjEL,MAAAA,aAAa,CAACF,IAAI,CAACG,OAAL,CAAaC,KAAd,CAAb;AACD;AACF,GAJD;;AAMA,QAAMI,QAAQ,GAAIF,CAAD,IAAO;AACtB,QAAIL,UAAU,KAAK,EAAf,IAAqBA,UAAU,KAAKM,SAAxC,EAAmD;AACjDX,MAAAA,YAAY,CAACK,UAAD,CAAZ;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW;AACZ;AACF,GAND;;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAEW,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAE,CAACT,OADb;AAEE,IAAA,GAAG,EAAEC,IAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,wBAJd;AAKE,IAAA,QAAQ,EAAEK,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,QAAQ,EAAE,CAACN,OADb;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAE,QAHT;AAIE,IAAA,SAAS,EAAC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CA5CD;;AA8CA,eAAeL,WAAf","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\n//useRef hook is a way to reference a dom object - alternative for forms.  use for simple forms\nimport MovieContext from '../../context/movie/movieContext';\n\nconst MovieFilter = () => {\n  const movieContext = useContext(MovieContext);\n  const { filterMovies, clearFilter, filtered, loading } = movieContext;\n  const text = useRef('');\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = (e) => {\n    if (text.current.value !== '' || text.current.value !== undefined) {\n      setSearchTerm(text.current.value)\n    }\n  };\n\n  const onSubmit = (e) => {\n    if (searchTerm !== '' || searchTerm !== undefined) {\n      filterMovies(searchTerm);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        disabled={!loading}\n        ref={text}\n        type='text'\n        placeholder='Filter movies by Title'\n        onChange={onChange}\n      />\n      <input\n        disabled={!loading}\n        type='submit'\n        value={'Search'}\n        className='btn btn-primary'\n      />\n    </form>\n  );\n};\n\nexport default MovieFilter;\n"]},"metadata":{},"sourceType":"module"}