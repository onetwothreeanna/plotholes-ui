{"ast":null,"code":"var _jsxFileName = \"/Users/annayoungyeun/Projects/bucket-flicks-react-app/client/src/context/movie/MovieState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport MovieContext from './movieContext';\nimport movieReducer from './movieReducer';\nimport { ADD_MOVIE, DELETE_MOVIE, UPDATE_MOVIE, SET_CURRENT, CLEAR_CURRENT, FILTER_MOVIES, CLEAR_FILTER, MOVIE_ERROR, GET_MOVIES, CLEAR_MOVIES } from '../types';\n\nconst MovieState = props => {\n  const initialState = {\n    movies: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(movieReducer, initialState); //Get Movies\n\n  const getMovies = async () => {\n    try {\n      const res = await axios.get('/all');\n      dispatch({\n        type: GET_MOVIES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message\n      });\n    }\n  }; //Add Movie\n\n\n  const addMovie = async movie => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/addmovie', movie, config);\n      dispatch({\n        type: ADD_MOVIE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message\n      });\n    }\n  }; //Delete Movie\n\n\n  const deleteMovie = async id => {\n    try {\n      const res = await axios.delete(`/movies/${id}`);\n      dispatch({\n        type: DELETE_MOVIE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message\n      });\n    }\n  }; //Update movie\n\n\n  const updateMovie = async movie => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/movies/${movie.id}`, movie, config);\n      dispatch({\n        type: UPDATE_MOVIE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message\n      });\n    }\n  }; //Clear Movies\n\n\n  const clearMovies = () => {\n    dispatch({\n      type: CLEAR_MOVIES\n    });\n  }; //Filter Movies\n\n\n  const filterMovies = text => {\n    dispatch({\n      type: FILTER_MOVIES,\n      payload: text\n    });\n  }; //Clear Movies\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; //Set Current Movies\n\n\n  const setCurrent = movie => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: movie\n    });\n  }; //Clear Current Movies\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(MovieContext.Provider, {\n    value: {\n      movies: state.movies,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      filterMovies,\n      clearFilter,\n      setCurrent,\n      clearCurrent,\n      addMovie,\n      updateMovie,\n      deleteMovie,\n      getMovies,\n      clearMovies\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default MovieState;","map":{"version":3,"sources":["/Users/annayoungyeun/Projects/bucket-flicks-react-app/client/src/context/movie/MovieState.js"],"names":["React","useReducer","axios","MovieContext","movieReducer","ADD_MOVIE","DELETE_MOVIE","UPDATE_MOVIE","SET_CURRENT","CLEAR_CURRENT","FILTER_MOVIES","CLEAR_FILTER","MOVIE_ERROR","GET_MOVIES","CLEAR_MOVIES","MovieState","props","initialState","movies","current","filtered","error","loading","state","dispatch","getMovies","res","get","type","payload","data","err","message","addMovie","movie","config","headers","post","deleteMovie","id","delete","updateMovie","put","clearMovies","filterMovies","text","clearFilter","setCurrent","clearCurrent","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,WARF,EASEC,UATF,EAUEC,YAVF,QAWO,UAXP;;AAaA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,IADW;AAEnBC,IAAAA,OAAO,EAAE,IAFU;AAGnBC,IAAAA,QAAQ,EAAE,IAHS;AAInBC,IAAAA,KAAK,EAAE,IAJY;AAKnBC,IAAAA,OAAO,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,YAAD,EAAea,YAAf,CAApC,CAT4B,CAW5B;;AACA,QAAMQ,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,MAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEf,UADC;AAEPgB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEhB,WADC;AAEPiB,QAAAA,OAAO,EAAEE,GAAG,CAACC;AAFN,OAAD,CAAR;AAID;AACF,GAbD,CAZ4B,CA2B5B;;;AACA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMV,GAAG,GAAG,MAAMxB,KAAK,CAACmC,IAAN,CAAW,WAAX,EAAwBH,KAAxB,EAA+BC,MAA/B,CAAlB;AACAX,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEvB,SADC;AAEPwB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAND,CAME,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEhB,WADC;AAEPiB,QAAAA,OAAO,EAAEE,GAAG,CAACC;AAFN,OAAD,CAAR;AAID;AACF,GAnBD,CA5B4B,CAiD5B;;;AACA,QAAMM,WAAW,GAAG,MAAOC,EAAP,IAAc;AAChC,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMxB,KAAK,CAACsC,MAAN,CAAc,WAAUD,EAAG,EAA3B,CAAlB;AACAf,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEtB,YADC;AAEPuB,QAAAA,OAAO,EAAEU;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOR,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEhB,WADC;AAEPiB,QAAAA,OAAO,EAAEE,GAAG,CAACC;AAFN,OAAD,CAAR;AAID;AACF,GAbD,CAlD4B,CAiE5B;;;AACA,QAAMS,WAAW,GAAG,MAAOP,KAAP,IAAiB;AACnC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMV,GAAG,GAAG,MAAMxB,KAAK,CAACwC,GAAN,CACf,WAAUR,KAAK,CAACK,EAAG,EADJ,EAEhBL,KAFgB,EAGhBC,MAHgB,CAAlB;AAKAX,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAErB,YADC;AAEPsB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAVD,CAUE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEhB,WADC;AAEPiB,QAAAA,OAAO,EAAEE,GAAG,CAACC;AAFN,OAAD,CAAR;AAID;AACF,GAvBD,CAlE4B,CA2F5B;;;AACA,QAAMW,WAAW,GAAG,MAAM;AACxBnB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AACD,GAFD,CA5F4B,CAgG5B;;;AACA,QAAM8B,YAAY,GAAIC,IAAD,IAAU;AAC7BrB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAElB,aAAR;AAAuBmB,MAAAA,OAAO,EAAEgB;AAAhC,KAAD,CAAR;AACD,GAFD,CAjG4B,CAqG5B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBtB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEjB;AAAR,KAAD,CAAR;AACD,GAFD,CAtG4B,CA0G5B;;;AACA,QAAMoC,UAAU,GAAIb,KAAD,IAAW;AAC5BV,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEpB,WAAR;AAAqBqB,MAAAA,OAAO,EAAEK;AAA9B,KAAD,CAAR;AACD,GAFD,CA3G4B,CA+G5B;;;AACA,QAAMc,YAAY,GAAG,MAAM;AACzBxB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEnB;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,MAAM,EAAEK,KAAK,CAACL,MADT;AAELC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLC,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAHX;AAILC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAJR;AAKLuB,MAAAA,YALK;AAMLE,MAAAA,WANK;AAOLC,MAAAA,UAPK;AAQLC,MAAAA,YARK;AASLf,MAAAA,QATK;AAULQ,MAAAA,WAVK;AAWLH,MAAAA,WAXK;AAYLb,MAAAA,SAZK;AAaLkB,MAAAA;AAbK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBG3B,KAAK,CAACiC,QAjBT,CADF;AAqBD,CAzID;;AA2IA,eAAelC,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport MovieContext from './movieContext';\nimport movieReducer from './movieReducer';\nimport {\n  ADD_MOVIE,\n  DELETE_MOVIE,\n  UPDATE_MOVIE,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  FILTER_MOVIES,\n  CLEAR_FILTER,\n  MOVIE_ERROR,\n  GET_MOVIES,\n  CLEAR_MOVIES,\n} from '../types';\n\nconst MovieState = (props) => {\n  const initialState = {\n    movies: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(movieReducer, initialState);\n\n  //Get Movies\n  const getMovies = async () => {\n    try {\n      const res = await axios.get('/all');\n      dispatch({\n        type: GET_MOVIES,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n\n  //Add Movie\n  const addMovie = async (movie) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/addmovie', movie, config);\n      dispatch({\n        type: ADD_MOVIE,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n\n  //Delete Movie\n  const deleteMovie = async (id) => {\n    try {\n      const res = await axios.delete(`/movies/${id}`);\n      dispatch({\n        type: DELETE_MOVIE,\n        payload: id,\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n\n  //Update movie\n  const updateMovie = async (movie) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.put(\n        `/movies/${movie.id}`,\n        movie,\n        config\n      );\n      dispatch({\n        type: UPDATE_MOVIE,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n\n  //Clear Movies\n  const clearMovies = () => {\n    dispatch({ type: CLEAR_MOVIES });\n  };\n\n  //Filter Movies\n  const filterMovies = (text) => {\n    dispatch({ type: FILTER_MOVIES, payload: text });\n  };\n\n  //Clear Movies\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  //Set Current Movies\n  const setCurrent = (movie) => {\n    dispatch({ type: SET_CURRENT, payload: movie });\n  };\n\n  //Clear Current Movies\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  return (\n    <MovieContext.Provider\n      value={{\n        movies: state.movies,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        filterMovies,\n        clearFilter,\n        setCurrent,\n        clearCurrent,\n        addMovie,\n        updateMovie,\n        deleteMovie,\n        getMovies,\n        clearMovies,\n      }}\n    >\n      {props.children}\n    </MovieContext.Provider>\n  );\n};\n\nexport default MovieState;\n"]},"metadata":{},"sourceType":"module"}