{"ast":null,"code":"var _jsxFileName = \"/Users/annayoungyeun/Projects/bucket-flicks-react-app/client/src/components/movies/Movies.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport MovieItem from './MovieItem';\nimport Spinner from '../layout/Spinner';\nimport MovieContext from '../../context/movie/movieContext';\nimport MoviesTable from './MoviesTable';\nimport PaginatedContent from './PaginatedContent';\n\nconst Movies = () => {\n  const movieContext = useContext(MovieContext);\n  const {\n    movies,\n    filtered,\n    getMovies,\n    loading\n  } = movieContext;\n  useEffect(() => {\n    getMovies(); //eslint-disable-next-line\n  }, []);\n\n  if (movies !== null && movies.length === 0 && !loading) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"Please add a movie.\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, movies !== null && !loading ? filtered !== null ? filtered.map(movie => /*#__PURE__*/React.createElement(MovieItem, {\n    key: movie.id,\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(PaginatedContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/annayoungyeun/Projects/bucket-flicks-react-app/client/src/components/movies/Movies.js"],"names":["React","Fragment","useContext","useEffect","MovieItem","Spinner","MovieContext","MoviesTable","PaginatedContent","Movies","movieContext","movies","filtered","getMovies","loading","length","map","movie","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,YAAY,GAAGR,UAAU,CAACI,YAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,MAA2CJ,YAAjD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,GADK,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACI,MAAP,KAAkB,CAArC,IAA0C,CAACD,OAA/C,EAAwD;AACtD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,KAAK,IAAX,IAAmB,CAACG,OAApB,GACCF,QAAQ,KAAK,IAAb,GACEA,QAAQ,CAACI,GAAT,CAAcC,KAAD,iBACX,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,gBAKE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,gBASC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD,CA5BD;;AA8BA,eAAeR,MAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport MovieItem from './MovieItem';\nimport Spinner from '../layout/Spinner';\nimport MovieContext from '../../context/movie/movieContext';\nimport MoviesTable from './MoviesTable';\nimport PaginatedContent from './PaginatedContent';\n\nconst Movies = () => {\n  const movieContext = useContext(MovieContext);\n  const { movies, filtered, getMovies, loading } = movieContext;\n\n  useEffect(() => {\n    getMovies();\n    //eslint-disable-next-line\n  }, []);\n\n  if (movies !== null && movies.length === 0 && !loading) {\n    return <h4>Please add a movie.</h4>;\n  }\n\n  return (\n    <Fragment>\n      {movies !== null && !loading ? (\n        filtered !== null ? (\n          filtered.map((movie) => (\n            <MovieItem key={movie.id} movie={movie} />\n          ))\n        ) : (\n          <PaginatedContent />\n        )\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}