{"ast":null,"code":"import { ADD_WORKOUT, GET_WORKOUTS, DELETE_WORKOUT, CLEAR_WORKOUTS, UPDATE_WORKOUT, SET_CURRENT, CLEAR_CURRENT, FILTER_WORKOUTS, CLEAR_FILTER, WORKOUT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_WORKOUTS:\n      return { ...state,\n        workouts: action.payload,\n        loading: false\n      };\n\n    case ADD_WORKOUT:\n      return { ...state,\n        workouts: [action.payload, ...state.workouts],\n        loading: false\n      };\n\n    case UPDATE_WORKOUT:\n      return { ...state,\n        workouts: state.workouts.map(workout => workout.id === action.payload.id ? action.payload : workout),\n        loading: false\n      };\n\n    case DELETE_WORKOUT:\n      return { ...state,\n        workouts: state.workouts.filter(workout => workout._id !== action.payload),\n        loading: false\n      };\n\n    case CLEAR_WORKOUTS:\n      return { ...state,\n        workouts: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_WORKOUTS:\n      return { ...state,\n        filtered: state.workouts.filter(workout => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return workout.name.match(regex) || workout.type.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case WORKOUT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/annayoungyeun/Projects/befitting/client/src/context/workout/workoutReducer.js"],"names":["ADD_WORKOUT","GET_WORKOUTS","DELETE_WORKOUT","CLEAR_WORKOUTS","UPDATE_WORKOUT","SET_CURRENT","CLEAR_CURRENT","FILTER_WORKOUTS","CLEAR_FILTER","WORKOUT_ERROR","state","action","type","workouts","payload","loading","map","workout","id","filter","_id","filtered","error","current","regex","RegExp","name","match"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,WANF,EAOEC,aAPF,EAQEC,eARF,EASEC,YATF,EAUEC,aAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,QAA1B,CAFL;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAoBC,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAD5C,CAFL;AAKLF,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACPF,OAAD,IAAaA,OAAO,CAACG,GAAR,KAAgBT,MAAM,CAACG,OAD5B,CAFL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAE,IAFL;AAGLQ,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKlB,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELa,QAAAA,OAAO,EAAEZ,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELa,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKhB,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAuBF,OAAD,IAAa;AAC3C,gBAAMO,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEd,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACS,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BP,OAAO,CAACL,IAAR,CAAae,KAAb,CAAmBH,KAAnB,CAApC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELW,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELY,QAAAA,KAAK,EAAEX,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAlEJ;AAoED,CArED","sourcesContent":["import {\n  ADD_WORKOUT,\n  GET_WORKOUTS,\n  DELETE_WORKOUT,\n  CLEAR_WORKOUTS,\n  UPDATE_WORKOUT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  FILTER_WORKOUTS,\n  CLEAR_FILTER,\n  WORKOUT_ERROR,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_WORKOUTS:\n      return {\n        ...state,\n        workouts: action.payload,\n        loading: false,\n      };\n    case ADD_WORKOUT:\n      return {\n        ...state,\n        workouts: [action.payload, ...state.workouts],\n        loading: false,\n      };\n    case UPDATE_WORKOUT:\n      return {\n        ...state,\n        workouts: state.workouts.map((workout) =>\n          workout.id === action.payload.id ? action.payload : workout\n        ),\n        loading: false,\n      };\n    case DELETE_WORKOUT:\n      return {\n        ...state,\n        workouts: state.workouts.filter(\n          (workout) => workout._id !== action.payload\n        ),\n        loading: false,\n      };\n    case CLEAR_WORKOUTS:\n      return {\n        ...state,\n        workouts: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case FILTER_WORKOUTS:\n      return {\n        ...state,\n        filtered: state.workouts.filter((workout) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return workout.name.match(regex) || workout.type.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n    case WORKOUT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}